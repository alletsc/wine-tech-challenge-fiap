name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

  workflow_dispatch:

jobs:
  lint:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create and activate virtualenv
        run: |
          python -m venv .venv
          echo "source .venv/bin/activate" >> $GITHUB_PATH

      - name: Install project and linting tools
        run: |
          source .venv/bin/activate
          pip install -e .
          pip install isort black

      - name: Check for importing style with isort
        run: |
          source .venv/bin/activate
          isort --profile=black --check --diff app tests

      - name: Run lint with flake8
        run: |
          source .venv/bin/activate
          flake8 app tests

      - name: Check code formatting with black
        run: |
          source .venv/bin/activate
          black --check --diff app tests

  tests:
    needs: lint
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.12]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create and activate virtualenv
        run: |
          python -m venv .venv
          echo "source .venv/bin/activate" >> $GITHUB_PATH

      - name: Install project
        run: |
          source .venv/bin/activate
          pip install -e .

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest -v --junitxml=./test-result.xml

      - name: Publish junit results
        uses: EnricoMi/publish-unit-test-result-action@v1.40
        if: always()
        with:
          files: "./test-result.xml"
          check_name: "Test Result (Python ${{matrix.python-version}})"
          github_token: ${{ secrets.GITHUB_TOKEN }}
